{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","lib/fetcher.ts","lib/api.ts","components/posts.tsx","components/todos.tsx","components/configs.tsx","components/conversations.tsx","theme.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","instance","undefined","amplifyFetcher","query","variables","a","console","log","api","API","getInstance","response","data","ModelSortDirection","isSignedIn","this","operation","authMode","GRAPHQL_AUTH_MODE","AMAZON_COGNITO_USER_POOLS","AWS_IAM","graphqlOperation","AmplifyAPI","graphql","signedIn","CreateEc2ConfigDocument","DeleteEc2ConfigDocument","CreatePostDocument","initialState","title","content","Posts","options","useState","post","setPost","refetchOnWindowFocus","useQuery","isLoading","refetch","useMutation","input","result","createPost","onChange","target","name","value","createNewPost","Auth","currentAuthenticatedUser","userData","username","onSuccess","listPosts","items","owner","placeholder","onClick","Todos","className","listTodos","length","todo","userId","startDate","stopDate","Configs","config","setConfig","createEc2Config","deleteEc2Config","createNewEc2Config","listEc2Configs","Date","toLocaleString","date","toISOString","setHours","getHours","Conversations","css","styles","container","listConversations","item","i","to","link","key","conversation","conversationTitle","chevronContainer","textDecoration","color","padding","marginTop","backgroundColor","borderRadius","display","margin","marginLeft","flex","justifyContent","fontSize","fontWeight","borderBottom","paddingBottom","Amplify","configure","window","ENV","withAuthenticator","useEffect","onAuthUIStateChange","nextAuthState","authData","updateIsSignedIn","AuthState","SignedIn","href","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mLAAA,IAAIA,EAAM,CACT,qCAAsC,CACrC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,mCAAoC,CACnC,IACA,IAED,mCAAoC,CACnC,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,uCAAwC,CACvC,IACA,GAED,+BAAgC,CAC/B,IACA,IAED,yCAA0C,CACzC,IACA,IAED,uCAAwC,CACvC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,0BAA2B,CAC1B,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,oCAAqC,CACpC,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,qCAAsC,CACrC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,oCAAqC,CACpC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,qCAAsC,CACrC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,2MCrIbgB,OAA4BC,EAEzB,SAASC,EAAkCC,EAAeC,GAC7D,6BAAO,8BAAAC,EAAA,6DACHC,QAAQC,IAAI,aAAcH,GAEpBI,EAAMC,EAAIC,cAHb,SAIoBF,EAAIL,MAAMA,EAAOC,GAJrC,cAIGO,EAJH,yBAKIA,EAASC,MALb,2CASJ,ICoRKC,EDpRCJ,EAAb,WAGI,aAAe,yBAFLK,YAAsB,EAG5BC,KAAKD,YAAa,EAJ1B,gFAiBI,WAAmBX,EAAeC,GAAlC,8EACUY,EADV,aAEQC,SAAUF,KAAKD,WAAaI,oBAAkBC,0BAA4BD,oBAAkBE,SACzFC,YAAiBlB,EAAOC,IAHnC,SAMiBkB,IAAWC,QAAQP,GANpC,wFAjBJ,oFAOI,WAEI,OADKhB,IAAUA,EAAW,IAAIS,GACvBT,IATf,8BAYI,SAAwBwB,GACfxB,IAAUA,EAAW,IAAIS,GAC9BT,EAASc,WAAaU,MAd9B,K,iDCoRYX,K,UAAAA,E,aAAAA,M,KA4sIL,IA45CMY,EAAuB,qXAgGvBC,EAAuB,qXAgDvBC,EAAkB,4L,OCnhMzBC,EAAe,CAAEC,MAAO,GAAIC,QAAS,IAEpC,SAASC,IAAS,IAAD,MDmpNtB3B,EACA4B,ECppNsB,EACEC,mBAASL,GADX,mBACfM,EADe,KACTC,EADS,KAEdN,EAAmBK,EAAnBL,MAAOC,EAAYI,EAAZJ,QAFO,GDmpNtB1B,EC/oNuD,KDgpNvD4B,EChpN6D,CAC3DI,sBAAsB,GDipNxBC,YACE,CAAC,YAAajC,GACdF,EAtB0B,sTAwBxBE,GAEF4B,ICxpNMpB,EAJc,EAIdA,KAAM0B,EAJQ,EAIRA,UAAWC,EAJH,EAIGA,QAJH,EASDC,YAAW,uCAAC,WAAOC,GAAP,iBAAApC,EAAA,sEACVI,EAAIC,cAAcP,MAAMwB,EAAoB,CAAEc,UADpC,cACzBC,EADyB,mCAExBA,EAAO9B,YAFiB,aAExB,EAAa+B,YAFW,2CAAD,uDAAzBA,EATe,oBAchBC,EAAW,SAACrD,GAChB4C,GAAQ,8BAAC,eAAWD,GAAZ,kBAAmB3C,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,YAGhDC,EAAa,uCAAG,8BAAA3C,EAAA,yDACfwB,GAAUC,EADK,iEAGGmB,IAAKC,2BAHR,cAGdC,EAHc,OAKdV,EALc,2BAMfP,GANe,IAOlBkB,SAAUD,EAASC,WAPD,SAUOT,EAAWF,EAAO,CAAEY,UAAW,SAACzC,GAAWN,QAAQC,IAAIK,MAV9D,eAYlB2B,IAZkB,4CAAH,qDAgBnB,OAAID,EAAkB,6CAGpB,gCACE,gCACE,yCAEM,OAAJ1B,QAAI,IAAJA,GAAA,UAAAA,EAAM0C,iBAAN,eAAiBC,OAAjB,OACI3C,QADJ,IACIA,GADJ,UACIA,EAAM0C,iBADV,iBACI,EAAiBC,aADrB,aACI,EAAwBxE,KAAI,SAAAmD,GAC5B,OACE,gCACE,yCAAYA,EAAKL,SACjB,yCAAYK,EAAKsB,SACjB,2CAActB,EAAKJ,iBAIvB,mDAGR,uBACA,uBACA,gCACE,8CACA,8BACE,uBAAOc,SAAUA,EAAUE,KAAK,QAAQW,YAAY,YAEtD,8BACE,0BAAUb,SAAUA,EAAUE,KAAK,UAAUW,YAAY,cAE3D,8BACE,wBAAQC,QAASV,EAAjB,iCCvEH,SAASW,IAAS,IFwoMvBvD,EACA4B,EEzoMsB,GFwoMtB5B,EEvoM8C,KFwoM9C4B,EExoMoD,CAClDI,sBAAsB,GFyoMxBC,YACE,CAAC,YAAajC,GACdF,EAhB0B,qGAkBxBE,GAEF4B,IEhpMMpB,EADc,EACdA,KAIR,OALsB,EACR0B,UAIQ,6CAGpB,qBAAKsB,UAAU,MAAf,SACE,gCACE,yCAEM,OAAJhD,QAAI,IAAJA,OAAA,EAAAA,EAAMiD,UAAUC,QAAS,EAAzB,OACIlD,QADJ,IACIA,OADJ,EACIA,EAAMiD,UAAU9E,KAAI,SAAAgF,GACpB,OACE,gCACE,yCAAYA,EAAKlC,SACjB,yCAAYkC,EAAKC,gBAIrB,qD,qBCXRpC,G,OAAe,CAAEqC,UAAW,GAAIC,SAAU,KAEzC,SAASC,IAAW,IAAD,MHwlNxB/D,EACA4B,EGzlNwB,EACIC,mBAASL,GADb,mBACjBwC,EADiB,KACTC,EADS,KAEhBJ,EAAuBG,EAAvBH,UAAWC,EAAYE,EAAZF,SAFK,GHwlNxB9D,EGplN4D,KHqlN5D4B,EGrlNkE,CAChEI,sBAAsB,GHslNxBC,YACE,CAAC,iBAAkBjC,GACnBF,EApC+B,qgBAsC7BE,GAEF4B,IG7lNMpB,EAJgB,EAIhBA,KAAM0B,EAJU,EAIVA,UAAWC,EAJD,EAICA,QAJD,EASEC,YAAW,uCAAC,WAAOC,GAAP,iBAAApC,EAAA,sEACfI,EAAIC,cAAcP,MAAMsB,EAAyB,CAAEgB,UADpC,cAC9BC,EAD8B,mCAE7BA,EAAO9B,YAFsB,aAE7B,EAAa0D,iBAFgB,2CAAD,uDAA9BA,EATiB,sBAcE9B,YAAW,uCAAC,WAAOC,GAAP,iBAAApC,EAAA,sEACfI,EAAIC,cAAcP,MAAMuB,EAAyB,CAAEe,UADpC,cAC9BC,EAD8B,OAEpCpC,QAAQC,IAAImC,GAFwB,4BAG7BA,EAAO9B,YAHsB,aAG7B,EAAa2D,iBAHgB,2CAAD,uDAA9BA,EAdiB,oBAoBlBC,EAAkB,uCAAG,8BAAAnE,EAAA,yDACpB4D,GAAcC,EADM,wDAGzB5D,QAAQC,IAAI6D,GAHa,SAKFnB,IAAKC,2BALH,cAKnBC,EALmB,OAOnBV,EAPmB,2BAQpB2B,GARoB,IAUvBhB,SAAUD,EAASC,WAVI,SAaEkB,EAAgB7B,EAAO,CAAEY,UAAW,SAACzC,GAAWN,QAAQC,IAAIK,MAb9D,eAevB2B,IAfuB,4CAAH,qDAmBxB,OAAID,EAAkB,6CAGpB,gCACE,gCACE,+CAEM,OAAJ1B,QAAI,IAAJA,GAAA,UAAAA,EAAM6D,sBAAN,eAAsBlB,OAAtB,OACI3C,QADJ,IACIA,GADJ,UACIA,EAAM6D,sBADV,iBACI,EAAsBlB,aAD1B,aACI,EAA6BxE,KAAI,SAAAqF,GACjC,OACE,gCACE,8CAAiB,IAAIM,KAAKN,EAAOH,WAAWU,oBAC5C,6CAAgB,IAAID,KAAKN,EAAOF,UAAUS,oBAC1C,yCAAYP,EAAOZ,SACnB,wBAAQE,QAAO,sBAAE,sBAAArD,EAAA,sEACYkE,EAAgB,CAAC5E,GAAIyE,EAAOzE,KADxC,eAGb4C,IAHa,2CAAjB,0BASJ,yDAGR,uBACA,uBACA,gCACE,oDACA,8BACE,cAAC,IAAD,CACEK,SAAW,SAACgC,GAAD,OAA2BP,GAAU,8BAAC,eAAWD,GAAZ,IAAoBH,UAAYW,EAAgBC,oBAChG9B,MAAO,IAAI2B,MAAK,IAAIA,MAAOI,UAAS,IAAIJ,MAAOK,WAAa,QAGhE,8BACE,cAAC,IAAD,CACEnC,SAAW,SAACgC,GAAD,OAA2BP,GAAU,8BAAC,eAAWD,GAAZ,IAAoBF,SAAWU,EAAgBC,oBAC/F9B,MAAO,IAAI2B,MAAK,IAAIA,MAAOI,UAAS,IAAIJ,MAAOK,WAAa,QAGhE,8BACE,wBAAQrB,QAASc,EAAjB,uC,qBClFH,SAASQ,IAAiB,IAAD,MJugN9B5E,EACA4B,EIxgN8B,GJugN9B5B,EIlgNmE,KJmgNnE4B,EIngNyE,CACnEI,sBAAsB,GJogN5BC,YACE,CAAC,oBAAqBjC,GACtBF,EAtEkC,4rCAwEhCE,GAEF4B,II3gNUpB,EALkB,EAKlBA,KALkB,EAKZ0B,UALY,EAKDC,QASzB,OACE,gDAAS0C,cAAIC,EAAOC,YAApB,cACE,6CAAOF,cAAIC,EAAOrD,QAAlB,kCAEM,OAAJjB,QAAI,IAAJA,GAAA,UAAAA,EAAMwE,yBAAN,eAAyB7B,OAAzB,OACE3C,QADF,IACEA,GADF,UACEA,EAAMwE,yBADR,iBACE,EAAyB7B,aAD3B,aACE,EAAgCxE,KAAI,SAACsG,EAAMC,GAC3C,OACA,wBAAC,IAAD,yBAAMC,GAAE,uBAAkBF,EAAK1F,GAAvB,YAA6B0F,EAAKvC,OAAYmC,cAAIC,EAAOM,OAAjE,IAAwEC,IAAKH,IAC3E,gDAASL,cAAIC,EAAOQ,eAApB,cACE,cAAC,IAAD,IACA,6CAAOT,cAAIC,EAAOS,oBAAlB,aAAuCN,EAAKvC,QAC5C,+CAASmC,cAAIC,EAAOU,mBAApB,aACE,cAAC,IAAD,eAKH,4DAwBjB,IAAMV,EAAS,CACbM,KAAM,CACJK,eAAgB,OAChBC,MAAO,SAETX,UAAW,CACTY,QAAS,IAEXL,aAAc,CACZM,UAAW,GACXC,gBChFY,yBDiFZF,QAAS,YACTG,aAAc,GACdC,QAAS,QAEXR,kBAAmB,CACjBS,OAAQ,EACRC,WAAY,IAEdT,iBAAkB,CAChBU,KAAM,EAAGH,QAAS,OAAQI,eAAgB,YAE5C1E,MAAO,CACL2E,SAAU,GACVC,WAAY,IACZL,OAAQ,EACRM,aAAa,aAAD,OCjGA,qBDkGZC,cAAe,IEhFnBC,UAAQC,UAAUC,OAAOC,KAoCVC,mBAlCf,WAQE,OANAC,qBAAU,WACR,OAAOC,aAAoB,SAACC,EAAeC,GACzC3G,EAAI4G,iBAAiBF,IAAkBG,IAAUC,eAElD,IAGD,sBAAK3D,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,cAAd,0BACA,qBAAIA,UAAU,WAAd,UACE,mCAAK,mBAAG4D,KAAK,WAAR,8BACL,mCAAK,mBAAGA,KAAK,WAAR,wBACL,mCAAK,mBAAGA,KAAK,SAAR,sBACL,mCAAK,mBAAGA,KAAK,SAAR,4BAGT,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACC,GAAD,OAAgB,cAAC5C,EAAD,eAAmB4C,OACjE,cAAC,IAAD,CAAOF,KAAK,iBAAiBC,OAAQ,SAACC,GAAD,OAAgB,cAAC5C,EAAD,eAAmB4C,OACxE,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAQ,SAACC,GAAD,OAAgB,cAACzD,EAAD,eAAayD,OAC5D,cAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,SAACC,GAAD,OAAgB,cAAC7F,EAAD,eAAW6F,OACxD,cAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,SAACC,GAAD,OAAgB,cAACjE,EAAD,eAAWiE,oBChCrDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBzI,MAAK,YAAkD,IAA/C0I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.687590f0.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t256,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t257,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t258,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t259,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t260,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t261,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t262,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t263,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t264,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t265,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t266,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t267,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t268,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t269,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t270,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t271,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t272,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t273,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t274,\n\t\t30\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t275,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t276,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t277,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t278,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t279,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t280,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t281,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t282,\n\t\t14\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t283,\n\t\t32\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t284,\n\t\t33\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 251;\nmodule.exports = webpackAsyncContext;","import { API as AmplifyAPI, graphqlOperation } from 'aws-amplify';\nimport { GraphQLResult, GRAPHQL_AUTH_MODE } from '@aws-amplify/api/lib/types';\n\nlet instance: API | undefined = undefined;\n\nexport function amplifyFetcher<TData, TVariables>(query: string, variables?: TVariables) {\n    return async (): Promise<TData> => {\n        console.log('VARIABLES:', variables);\n\n        const api = API.getInstance();\n        const response = await api.query(query, variables);\n        return response.data;\n    }\n}\n\nexport class API {\n    protected isSignedIn: boolean = false;\n\n    constructor() {\n        this.isSignedIn = false;\n    }\n\n    static getInstance(): API {\n        if (!instance) instance = new API();\n        return instance;\n    }\n\n    static updateIsSignedIn(signedIn: boolean): void {\n        if (!instance) instance = new API();\n        instance.isSignedIn = signedIn;\n    }\n\n    public async query(query: string, variables?: any) {\n        const operation = {\n            authMode: this.isSignedIn ? GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS : GRAPHQL_AUTH_MODE.AWS_IAM,\n            ...graphqlOperation(query, variables)\n        }\n\n        return await AmplifyAPI.graphql(operation) as GraphQLResult<any>;\n    }\n}","import {\n  useMutation,\n  UseMutationOptions,\n  useQuery,\n  UseQueryOptions\n} from \"react-query\";\nimport { amplifyFetcher } from \"../lib/fetcher\";\nexport type Maybe<T> = T | null | undefined;\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  AWSDate: any;\n  AWSTime: any;\n  AWSDateTime: any;\n  AWSTimestamp: any;\n  AWSEmail: any;\n  AWSJSON: any;\n  AWSURL: any;\n  AWSPhone: any;\n  AWSIPAddress: any;\n  BigInt: any;\n  Double: any;\n};\n\nexport type Ec2Config = {\n  __typename?: \"Ec2Config\";\n  id: Scalars[\"ID\"];\n  startDate: Scalars[\"AWSDateTime\"];\n  stopDate: Scalars[\"AWSDateTime\"];\n  username: Scalars[\"String\"];\n  history?: Maybe<ModelHistoryEntryConnection>;\n  createdAt: Scalars[\"AWSDateTime\"];\n  updatedAt: Scalars[\"AWSDateTime\"];\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Ec2ConfigHistoryArgs = {\n  comment?: Maybe<ModelStringKeyConditionInput>;\n  filter?: Maybe<ModelHistoryEntryFilterInput>;\n  sortDirection?: Maybe<ModelSortDirection>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type HistoryEntry = {\n  __typename?: \"HistoryEntry\";\n  id: Scalars[\"ID\"];\n  ec2ConfigId: Scalars[\"ID\"];\n  comment: Scalars[\"String\"];\n  time: Scalars[\"AWSDateTime\"];\n  createdAt: Scalars[\"AWSDateTime\"];\n  updatedAt: Scalars[\"AWSDateTime\"];\n};\n\nexport type Post = {\n  __typename?: \"Post\";\n  id: Scalars[\"ID\"];\n  title: Scalars[\"String\"];\n  content: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n  createdAt: Scalars[\"AWSDateTime\"];\n  updatedAt: Scalars[\"AWSDateTime\"];\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Todo = {\n  __typename?: \"Todo\";\n  id: Scalars[\"Int\"];\n  userId: Scalars[\"Int\"];\n  title: Scalars[\"String\"];\n  completed: Scalars[\"Boolean\"];\n};\n\nexport type Query = {\n  __typename?: \"Query\";\n  listTodos?: Maybe<Array<Maybe<Todo>>>;\n  getHistoryEntry?: Maybe<HistoryEntry>;\n  listHistoryEntrys?: Maybe<ModelHistoryEntryConnection>;\n  getUser?: Maybe<User>;\n  listUsers?: Maybe<ModelUserConnection>;\n  getConversation?: Maybe<Conversation>;\n  listConversations?: Maybe<ModelConversationConnection>;\n  getEc2Config?: Maybe<Ec2Config>;\n  listEc2Configs?: Maybe<ModelEc2ConfigConnection>;\n  getPost?: Maybe<Post>;\n  listPosts?: Maybe<ModelPostConnection>;\n  getTodo?: Maybe<Todo>;\n};\n\nexport type QueryGetHistoryEntryArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryListHistoryEntrysArgs = {\n  filter?: Maybe<ModelHistoryEntryFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryGetUserArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryListUsersArgs = {\n  filter?: Maybe<ModelUserFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryGetConversationArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryListConversationsArgs = {\n  filter?: Maybe<ModelConversationFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryGetEc2ConfigArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryListEc2ConfigsArgs = {\n  filter?: Maybe<ModelEc2ConfigFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryGetPostArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type QueryListPostsArgs = {\n  filter?: Maybe<ModelPostFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryGetTodoArgs = {\n  params: QueryGetTodoParamsInput;\n};\n\nexport type User = {\n  __typename?: \"User\";\n  id: Scalars[\"ID\"];\n  username: Scalars[\"String\"];\n  conversations?: Maybe<ModelConvoLinkConnection>;\n  messages?: Maybe<ModelMessageConnection>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UserConversationsArgs = {\n  filter?: Maybe<ModelConvoLinkFilterInput>;\n  sortDirection?: Maybe<ModelSortDirection>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UserMessagesArgs = {\n  filter?: Maybe<ModelMessageFilterInput>;\n  sortDirection?: Maybe<ModelSortDirection>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Conversation = {\n  __typename?: \"Conversation\";\n  id: Scalars[\"ID\"];\n  messages?: Maybe<ModelMessageConnection>;\n  associated?: Maybe<ModelConvoLinkConnection>;\n  name: Scalars[\"String\"];\n  members: Array<Scalars[\"String\"]>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ConversationMessagesArgs = {\n  filter?: Maybe<ModelMessageFilterInput>;\n  sortDirection?: Maybe<ModelSortDirection>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ConversationAssociatedArgs = {\n  filter?: Maybe<ModelConvoLinkFilterInput>;\n  sortDirection?: Maybe<ModelSortDirection>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Message = {\n  __typename?: \"Message\";\n  id: Scalars[\"ID\"];\n  author?: Maybe<User>;\n  authorId?: Maybe<Scalars[\"String\"]>;\n  content: Scalars[\"String\"];\n  conversation: Conversation;\n  messageConversationId: Scalars[\"ID\"];\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ConvoLink = {\n  __typename?: \"ConvoLink\";\n  id: Scalars[\"ID\"];\n  user: User;\n  convoLinkUserId?: Maybe<Scalars[\"ID\"]>;\n  conversation: Conversation;\n  convoLinkConversationId: Scalars[\"ID\"];\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Subscription = {\n  __typename?: \"Subscription\";\n  onCreateConvoLink?: Maybe<ConvoLink>;\n  onCreateMessage?: Maybe<Message>;\n  onCreateHistoryEntry?: Maybe<HistoryEntry>;\n  onUpdateHistoryEntry?: Maybe<HistoryEntry>;\n  onDeleteHistoryEntry?: Maybe<HistoryEntry>;\n  onCreateUser?: Maybe<User>;\n  onUpdateUser?: Maybe<User>;\n  onDeleteUser?: Maybe<User>;\n  onCreateConversation?: Maybe<Conversation>;\n  onUpdateConversation?: Maybe<Conversation>;\n  onDeleteConversation?: Maybe<Conversation>;\n  onCreateEc2Config?: Maybe<Ec2Config>;\n  onUpdateEc2Config?: Maybe<Ec2Config>;\n  onDeleteEc2Config?: Maybe<Ec2Config>;\n  onCreatePost?: Maybe<Post>;\n  onUpdatePost?: Maybe<Post>;\n  onDeletePost?: Maybe<Post>;\n};\n\nexport type SubscriptionOnCreateConvoLinkArgs = {\n  convoLinkUserId: Scalars[\"ID\"];\n};\n\nexport type SubscriptionOnCreateMessageArgs = {\n  messageConversationId: Scalars[\"ID\"];\n};\n\nexport type SubscriptionOnCreateConversationArgs = {\n  members: Scalars[\"String\"];\n};\n\nexport type SubscriptionOnUpdateConversationArgs = {\n  members: Scalars[\"String\"];\n};\n\nexport type SubscriptionOnDeleteConversationArgs = {\n  members: Scalars[\"String\"];\n};\n\nexport type SubscriptionOnCreateEc2ConfigArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SubscriptionOnUpdateEc2ConfigArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SubscriptionOnDeleteEc2ConfigArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SubscriptionOnCreatePostArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SubscriptionOnUpdatePostArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SubscriptionOnDeletePostArgs = {\n  owner?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum ModelSortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\"\n}\n\nexport type ModelEc2ConfigConnection = {\n  __typename?: \"ModelEc2ConfigConnection\";\n  items?: Maybe<Array<Maybe<Ec2Config>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelStringFilterInput = {\n  ne?: Maybe<Scalars[\"String\"]>;\n  eq?: Maybe<Scalars[\"String\"]>;\n  le?: Maybe<Scalars[\"String\"]>;\n  lt?: Maybe<Scalars[\"String\"]>;\n  ge?: Maybe<Scalars[\"String\"]>;\n  gt?: Maybe<Scalars[\"String\"]>;\n  contains?: Maybe<Scalars[\"String\"]>;\n  notContains?: Maybe<Scalars[\"String\"]>;\n  between?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n  beginsWith?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelIdFilterInput = {\n  ne?: Maybe<Scalars[\"ID\"]>;\n  eq?: Maybe<Scalars[\"ID\"]>;\n  le?: Maybe<Scalars[\"ID\"]>;\n  lt?: Maybe<Scalars[\"ID\"]>;\n  ge?: Maybe<Scalars[\"ID\"]>;\n  gt?: Maybe<Scalars[\"ID\"]>;\n  contains?: Maybe<Scalars[\"ID\"]>;\n  notContains?: Maybe<Scalars[\"ID\"]>;\n  between?: Maybe<Array<Maybe<Scalars[\"ID\"]>>>;\n  beginsWith?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type ModelIntFilterInput = {\n  ne?: Maybe<Scalars[\"Int\"]>;\n  eq?: Maybe<Scalars[\"Int\"]>;\n  le?: Maybe<Scalars[\"Int\"]>;\n  lt?: Maybe<Scalars[\"Int\"]>;\n  ge?: Maybe<Scalars[\"Int\"]>;\n  gt?: Maybe<Scalars[\"Int\"]>;\n  between?: Maybe<Array<Maybe<Scalars[\"Int\"]>>>;\n};\n\nexport type ModelFloatFilterInput = {\n  ne?: Maybe<Scalars[\"Float\"]>;\n  eq?: Maybe<Scalars[\"Float\"]>;\n  le?: Maybe<Scalars[\"Float\"]>;\n  lt?: Maybe<Scalars[\"Float\"]>;\n  ge?: Maybe<Scalars[\"Float\"]>;\n  gt?: Maybe<Scalars[\"Float\"]>;\n  between?: Maybe<Array<Maybe<Scalars[\"Float\"]>>>;\n};\n\nexport type ModelBooleanFilterInput = {\n  ne?: Maybe<Scalars[\"Boolean\"]>;\n  eq?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ModelEc2ConfigFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  startDate?: Maybe<ModelStringFilterInput>;\n  stopDate?: Maybe<ModelStringFilterInput>;\n  username?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelEc2ConfigFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelEc2ConfigFilterInput>>>;\n  not?: Maybe<ModelEc2ConfigFilterInput>;\n};\n\nexport type CreateEc2ConfigInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  startDate: Scalars[\"AWSDateTime\"];\n  stopDate: Scalars[\"AWSDateTime\"];\n  username: Scalars[\"String\"];\n};\n\nexport type UpdateEc2ConfigInput = {\n  id: Scalars[\"ID\"];\n  startDate?: Maybe<Scalars[\"AWSDateTime\"]>;\n  stopDate?: Maybe<Scalars[\"AWSDateTime\"]>;\n  username?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteEc2ConfigInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type Mutation = {\n  __typename?: \"Mutation\";\n  createHistoryEntry?: Maybe<HistoryEntry>;\n  updateHistoryEntry?: Maybe<HistoryEntry>;\n  deleteHistoryEntry?: Maybe<HistoryEntry>;\n  createUser?: Maybe<User>;\n  updateUser?: Maybe<User>;\n  deleteUser?: Maybe<User>;\n  createConversation?: Maybe<Conversation>;\n  updateConversation?: Maybe<Conversation>;\n  deleteConversation?: Maybe<Conversation>;\n  createMessage?: Maybe<Message>;\n  updateMessage?: Maybe<Message>;\n  deleteMessage?: Maybe<Message>;\n  createConvoLink?: Maybe<ConvoLink>;\n  updateConvoLink?: Maybe<ConvoLink>;\n  createEc2Config?: Maybe<Ec2Config>;\n  updateEc2Config?: Maybe<Ec2Config>;\n  deleteEc2Config?: Maybe<Ec2Config>;\n  createPost?: Maybe<Post>;\n  updatePost?: Maybe<Post>;\n  deletePost?: Maybe<Post>;\n};\n\nexport type MutationCreateHistoryEntryArgs = {\n  input: CreateHistoryEntryInput;\n};\n\nexport type MutationUpdateHistoryEntryArgs = {\n  input: UpdateHistoryEntryInput;\n};\n\nexport type MutationDeleteHistoryEntryArgs = {\n  input: DeleteHistoryEntryInput;\n};\n\nexport type MutationCreateUserArgs = {\n  input: CreateUserInput;\n};\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\nexport type MutationCreateConversationArgs = {\n  input: CreateConversationInput;\n};\n\nexport type MutationUpdateConversationArgs = {\n  input: UpdateConversationInput;\n};\n\nexport type MutationDeleteConversationArgs = {\n  input: DeleteConversationInput;\n};\n\nexport type MutationCreateMessageArgs = {\n  input: CreateMessageInput;\n};\n\nexport type MutationUpdateMessageArgs = {\n  input: UpdateMessageInput;\n};\n\nexport type MutationDeleteMessageArgs = {\n  input: DeleteMessageInput;\n};\n\nexport type MutationCreateConvoLinkArgs = {\n  input: CreateConvoLinkInput;\n};\n\nexport type MutationUpdateConvoLinkArgs = {\n  input: UpdateConvoLinkInput;\n};\n\nexport type MutationCreateEc2ConfigArgs = {\n  input: CreateEc2ConfigInput;\n};\n\nexport type MutationUpdateEc2ConfigArgs = {\n  input: UpdateEc2ConfigInput;\n};\n\nexport type MutationDeleteEc2ConfigArgs = {\n  input: DeleteEc2ConfigInput;\n};\n\nexport type MutationCreatePostArgs = {\n  input: CreatePostInput;\n};\n\nexport type MutationUpdatePostArgs = {\n  input: UpdatePostInput;\n};\n\nexport type MutationDeletePostArgs = {\n  input: DeletePostInput;\n};\n\nexport type ModelHistoryEntryConnection = {\n  __typename?: \"ModelHistoryEntryConnection\";\n  items?: Maybe<Array<Maybe<HistoryEntry>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelHistoryEntryFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  ec2ConfigId?: Maybe<ModelIdFilterInput>;\n  comment?: Maybe<ModelStringFilterInput>;\n  time?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelHistoryEntryFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelHistoryEntryFilterInput>>>;\n  not?: Maybe<ModelHistoryEntryFilterInput>;\n};\n\nexport type CreateHistoryEntryInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  ec2ConfigId: Scalars[\"ID\"];\n  comment: Scalars[\"String\"];\n  time: Scalars[\"AWSDateTime\"];\n};\n\nexport type UpdateHistoryEntryInput = {\n  id: Scalars[\"ID\"];\n  ec2ConfigId?: Maybe<Scalars[\"ID\"]>;\n  comment?: Maybe<Scalars[\"String\"]>;\n  time?: Maybe<Scalars[\"AWSDateTime\"]>;\n};\n\nexport type DeleteHistoryEntryInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type ModelPostConnection = {\n  __typename?: \"ModelPostConnection\";\n  items?: Maybe<Array<Maybe<Post>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelPostFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  title?: Maybe<ModelStringFilterInput>;\n  content?: Maybe<ModelStringFilterInput>;\n  username?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelPostFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelPostFilterInput>>>;\n  not?: Maybe<ModelPostFilterInput>;\n};\n\nexport type CreatePostInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  title: Scalars[\"String\"];\n  content: Scalars[\"String\"];\n  username: Scalars[\"String\"];\n};\n\nexport type UpdatePostInput = {\n  id: Scalars[\"ID\"];\n  title?: Maybe<Scalars[\"String\"]>;\n  content?: Maybe<Scalars[\"String\"]>;\n  username?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeletePostInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type ModelUserConnection = {\n  __typename?: \"ModelUserConnection\";\n  items?: Maybe<Array<Maybe<User>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelUserFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  username?: Maybe<ModelStringFilterInput>;\n  createdAt?: Maybe<ModelStringFilterInput>;\n  updatedAt?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelUserFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelUserFilterInput>>>;\n  not?: Maybe<ModelUserFilterInput>;\n};\n\nexport type CreateUserInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  username: Scalars[\"String\"];\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateUserInput = {\n  id: Scalars[\"ID\"];\n  username?: Maybe<Scalars[\"String\"]>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteUserInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type ModelConversationConnection = {\n  __typename?: \"ModelConversationConnection\";\n  items?: Maybe<Array<Maybe<Conversation>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelConversationFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  name?: Maybe<ModelStringFilterInput>;\n  members?: Maybe<ModelStringFilterInput>;\n  createdAt?: Maybe<ModelStringFilterInput>;\n  updatedAt?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelConversationFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelConversationFilterInput>>>;\n  not?: Maybe<ModelConversationFilterInput>;\n};\n\nexport type CreateConversationInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  name: Scalars[\"String\"];\n  members: Array<Scalars[\"String\"]>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateConversationInput = {\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  members?: Maybe<Array<Scalars[\"String\"]>>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteConversationInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreateMessageInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  authorId?: Maybe<Scalars[\"String\"]>;\n  content: Scalars[\"String\"];\n  messageConversationId: Scalars[\"ID\"];\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateMessageInput = {\n  id: Scalars[\"ID\"];\n  authorId?: Maybe<Scalars[\"String\"]>;\n  content?: Maybe<Scalars[\"String\"]>;\n  messageConversationId?: Maybe<Scalars[\"ID\"]>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type DeleteMessageInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type CreateConvoLinkInput = {\n  id?: Maybe<Scalars[\"ID\"]>;\n  convoLinkUserId?: Maybe<Scalars[\"ID\"]>;\n  convoLinkConversationId: Scalars[\"ID\"];\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateConvoLinkInput = {\n  id: Scalars[\"ID\"];\n  convoLinkUserId?: Maybe<Scalars[\"ID\"]>;\n  convoLinkConversationId?: Maybe<Scalars[\"ID\"]>;\n  createdAt?: Maybe<Scalars[\"String\"]>;\n  updatedAt?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelStringKeyConditionInput = {\n  eq?: Maybe<Scalars[\"String\"]>;\n  le?: Maybe<Scalars[\"String\"]>;\n  lt?: Maybe<Scalars[\"String\"]>;\n  ge?: Maybe<Scalars[\"String\"]>;\n  gt?: Maybe<Scalars[\"String\"]>;\n  between?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n  beginsWith?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelConvoLinkConnection = {\n  __typename?: \"ModelConvoLinkConnection\";\n  items?: Maybe<Array<Maybe<ConvoLink>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelConvoLinkFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  convoLinkUserId?: Maybe<ModelIdFilterInput>;\n  convoLinkConversationId?: Maybe<ModelIdFilterInput>;\n  createdAt?: Maybe<ModelStringFilterInput>;\n  updatedAt?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelConvoLinkFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelConvoLinkFilterInput>>>;\n  not?: Maybe<ModelConvoLinkFilterInput>;\n};\n\nexport type ModelMessageConnection = {\n  __typename?: \"ModelMessageConnection\";\n  items?: Maybe<Array<Maybe<Message>>>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ModelMessageFilterInput = {\n  id?: Maybe<ModelIdFilterInput>;\n  authorId?: Maybe<ModelStringFilterInput>;\n  content?: Maybe<ModelStringFilterInput>;\n  messageConversationId?: Maybe<ModelIdFilterInput>;\n  createdAt?: Maybe<ModelStringFilterInput>;\n  updatedAt?: Maybe<ModelStringFilterInput>;\n  and?: Maybe<Array<Maybe<ModelMessageFilterInput>>>;\n  or?: Maybe<Array<Maybe<ModelMessageFilterInput>>>;\n  not?: Maybe<ModelMessageFilterInput>;\n};\n\nexport type QueryGetTodoParamsInput = {\n  id: Scalars[\"String\"];\n};\n\nexport type CreateHistoryEntryMutationVariables = Exact<{\n  input: CreateHistoryEntryInput;\n}>;\n\nexport type CreateHistoryEntryMutation = { __typename?: \"Mutation\" } & {\n  createHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type UpdateHistoryEntryMutationVariables = Exact<{\n  input: UpdateHistoryEntryInput;\n}>;\n\nexport type UpdateHistoryEntryMutation = { __typename?: \"Mutation\" } & {\n  updateHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type DeleteHistoryEntryMutationVariables = Exact<{\n  input: DeleteHistoryEntryInput;\n}>;\n\nexport type DeleteHistoryEntryMutation = { __typename?: \"Mutation\" } & {\n  deleteHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type CreateUserMutationVariables = Exact<{\n  input: CreateUserInput;\n}>;\n\nexport type CreateUserMutation = { __typename?: \"Mutation\" } & {\n  createUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type UpdateUserMutationVariables = Exact<{\n  input: UpdateUserInput;\n}>;\n\nexport type UpdateUserMutation = { __typename?: \"Mutation\" } & {\n  updateUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type DeleteUserMutationVariables = Exact<{\n  input: DeleteUserInput;\n}>;\n\nexport type DeleteUserMutation = { __typename?: \"Mutation\" } & {\n  deleteUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type CreateConversationMutationVariables = Exact<{\n  input: CreateConversationInput;\n}>;\n\nexport type CreateConversationMutation = { __typename?: \"Mutation\" } & {\n  createConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type UpdateConversationMutationVariables = Exact<{\n  input: UpdateConversationInput;\n}>;\n\nexport type UpdateConversationMutation = { __typename?: \"Mutation\" } & {\n  updateConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type DeleteConversationMutationVariables = Exact<{\n  input: DeleteConversationInput;\n}>;\n\nexport type DeleteConversationMutation = { __typename?: \"Mutation\" } & {\n  deleteConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type CreateMessageMutationVariables = Exact<{\n  input: CreateMessageInput;\n}>;\n\nexport type CreateMessageMutation = { __typename?: \"Mutation\" } & {\n  createMessage?: Maybe<\n    { __typename?: \"Message\" } & Pick<\n      Message,\n      | \"id\"\n      | \"authorId\"\n      | \"content\"\n      | \"messageConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        author?: Maybe<\n          { __typename?: \"User\" } & Pick<\n            User,\n            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n          > & {\n              conversations?: Maybe<\n                { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                  ModelConvoLinkConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"ConvoLink\" } & Pick<\n                            ConvoLink,\n                            | \"id\"\n                            | \"convoLinkUserId\"\n                            | \"convoLinkConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              user: { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n              messages?: Maybe<\n                { __typename?: \"ModelMessageConnection\" } & Pick<\n                  ModelMessageConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"Message\" } & Pick<\n                            Message,\n                            | \"id\"\n                            | \"authorId\"\n                            | \"content\"\n                            | \"messageConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              author?: Maybe<\n                                { __typename?: \"User\" } & Pick<\n                                  User,\n                                  \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                                >\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n            }\n        >;\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type UpdateMessageMutationVariables = Exact<{\n  input: UpdateMessageInput;\n}>;\n\nexport type UpdateMessageMutation = { __typename?: \"Mutation\" } & {\n  updateMessage?: Maybe<\n    { __typename?: \"Message\" } & Pick<\n      Message,\n      | \"id\"\n      | \"authorId\"\n      | \"content\"\n      | \"messageConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        author?: Maybe<\n          { __typename?: \"User\" } & Pick<\n            User,\n            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n          > & {\n              conversations?: Maybe<\n                { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                  ModelConvoLinkConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"ConvoLink\" } & Pick<\n                            ConvoLink,\n                            | \"id\"\n                            | \"convoLinkUserId\"\n                            | \"convoLinkConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              user: { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n              messages?: Maybe<\n                { __typename?: \"ModelMessageConnection\" } & Pick<\n                  ModelMessageConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"Message\" } & Pick<\n                            Message,\n                            | \"id\"\n                            | \"authorId\"\n                            | \"content\"\n                            | \"messageConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              author?: Maybe<\n                                { __typename?: \"User\" } & Pick<\n                                  User,\n                                  \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                                >\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n            }\n        >;\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type DeleteMessageMutationVariables = Exact<{\n  input: DeleteMessageInput;\n}>;\n\nexport type DeleteMessageMutation = { __typename?: \"Mutation\" } & {\n  deleteMessage?: Maybe<\n    { __typename?: \"Message\" } & Pick<\n      Message,\n      | \"id\"\n      | \"authorId\"\n      | \"content\"\n      | \"messageConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        author?: Maybe<\n          { __typename?: \"User\" } & Pick<\n            User,\n            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n          > & {\n              conversations?: Maybe<\n                { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                  ModelConvoLinkConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"ConvoLink\" } & Pick<\n                            ConvoLink,\n                            | \"id\"\n                            | \"convoLinkUserId\"\n                            | \"convoLinkConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              user: { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n              messages?: Maybe<\n                { __typename?: \"ModelMessageConnection\" } & Pick<\n                  ModelMessageConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"Message\" } & Pick<\n                            Message,\n                            | \"id\"\n                            | \"authorId\"\n                            | \"content\"\n                            | \"messageConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              author?: Maybe<\n                                { __typename?: \"User\" } & Pick<\n                                  User,\n                                  \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                                >\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n            }\n        >;\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type CreateConvoLinkMutationVariables = Exact<{\n  input: CreateConvoLinkInput;\n}>;\n\nexport type CreateConvoLinkMutation = { __typename?: \"Mutation\" } & {\n  createConvoLink?: Maybe<\n    { __typename?: \"ConvoLink\" } & Pick<\n      ConvoLink,\n      | \"id\"\n      | \"convoLinkUserId\"\n      | \"convoLinkConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        user: { __typename?: \"User\" } & Pick<\n          User,\n          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            conversations?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type UpdateConvoLinkMutationVariables = Exact<{\n  input: UpdateConvoLinkInput;\n}>;\n\nexport type UpdateConvoLinkMutation = { __typename?: \"Mutation\" } & {\n  updateConvoLink?: Maybe<\n    { __typename?: \"ConvoLink\" } & Pick<\n      ConvoLink,\n      | \"id\"\n      | \"convoLinkUserId\"\n      | \"convoLinkConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        user: { __typename?: \"User\" } & Pick<\n          User,\n          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            conversations?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type CreateEc2ConfigMutationVariables = Exact<{\n  input: CreateEc2ConfigInput;\n}>;\n\nexport type CreateEc2ConfigMutation = { __typename?: \"Mutation\" } & {\n  createEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type UpdateEc2ConfigMutationVariables = Exact<{\n  input: UpdateEc2ConfigInput;\n}>;\n\nexport type UpdateEc2ConfigMutation = { __typename?: \"Mutation\" } & {\n  updateEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type DeleteEc2ConfigMutationVariables = Exact<{\n  input: DeleteEc2ConfigInput;\n}>;\n\nexport type DeleteEc2ConfigMutation = { __typename?: \"Mutation\" } & {\n  deleteEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type CreatePostMutationVariables = Exact<{\n  input: CreatePostInput;\n}>;\n\nexport type CreatePostMutation = { __typename?: \"Mutation\" } & {\n  createPost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type UpdatePostMutationVariables = Exact<{\n  input: UpdatePostInput;\n}>;\n\nexport type UpdatePostMutation = { __typename?: \"Mutation\" } & {\n  updatePost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type DeletePostMutationVariables = Exact<{\n  input: DeletePostInput;\n}>;\n\nexport type DeletePostMutation = { __typename?: \"Mutation\" } & {\n  deletePost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type ListTodosQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type ListTodosQuery = { __typename?: \"Query\" } & {\n  listTodos?: Maybe<\n    Array<\n      Maybe<\n        { __typename?: \"Todo\" } & Pick<\n          Todo,\n          \"id\" | \"userId\" | \"title\" | \"completed\"\n        >\n      >\n    >\n  >;\n};\n\nexport type GetHistoryEntryQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type GetHistoryEntryQuery = { __typename?: \"Query\" } & {\n  getHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type ListHistoryEntrysQueryVariables = Exact<{\n  filter?: Maybe<ModelHistoryEntryFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type ListHistoryEntrysQuery = { __typename?: \"Query\" } & {\n  listHistoryEntrys?: Maybe<\n    { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n      ModelHistoryEntryConnection,\n      \"nextToken\"\n    > & {\n        items?: Maybe<\n          Array<\n            Maybe<\n              { __typename?: \"HistoryEntry\" } & Pick<\n                HistoryEntry,\n                | \"id\"\n                | \"ec2ConfigId\"\n                | \"comment\"\n                | \"time\"\n                | \"createdAt\"\n                | \"updatedAt\"\n              >\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type GetUserQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type GetUserQuery = { __typename?: \"Query\" } & {\n  getUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type ListUsersQueryVariables = Exact<{\n  filter?: Maybe<ModelUserFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type ListUsersQuery = { __typename?: \"Query\" } & {\n  listUsers?: Maybe<\n    { __typename?: \"ModelUserConnection\" } & Pick<\n      ModelUserConnection,\n      \"nextToken\"\n    > & {\n        items?: Maybe<\n          Array<\n            Maybe<\n              { __typename?: \"User\" } & Pick<\n                User,\n                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n              > & {\n                  conversations?: Maybe<\n                    { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                      ModelConvoLinkConnection,\n                      \"nextToken\"\n                    > & {\n                        items?: Maybe<\n                          Array<\n                            Maybe<\n                              { __typename?: \"ConvoLink\" } & Pick<\n                                ConvoLink,\n                                | \"id\"\n                                | \"convoLinkUserId\"\n                                | \"convoLinkConversationId\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              > & {\n                                  user: { __typename?: \"User\" } & Pick<\n                                    User,\n                                    | \"id\"\n                                    | \"username\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                  conversation: {\n                                    __typename?: \"Conversation\";\n                                  } & Pick<\n                                    Conversation,\n                                    | \"id\"\n                                    | \"name\"\n                                    | \"members\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                }\n                            >\n                          >\n                        >;\n                      }\n                  >;\n                  messages?: Maybe<\n                    { __typename?: \"ModelMessageConnection\" } & Pick<\n                      ModelMessageConnection,\n                      \"nextToken\"\n                    > & {\n                        items?: Maybe<\n                          Array<\n                            Maybe<\n                              { __typename?: \"Message\" } & Pick<\n                                Message,\n                                | \"id\"\n                                | \"authorId\"\n                                | \"content\"\n                                | \"messageConversationId\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              > & {\n                                  author?: Maybe<\n                                    { __typename?: \"User\" } & Pick<\n                                      User,\n                                      | \"id\"\n                                      | \"username\"\n                                      | \"createdAt\"\n                                      | \"updatedAt\"\n                                    >\n                                  >;\n                                  conversation: {\n                                    __typename?: \"Conversation\";\n                                  } & Pick<\n                                    Conversation,\n                                    | \"id\"\n                                    | \"name\"\n                                    | \"members\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                }\n                            >\n                          >\n                        >;\n                      }\n                  >;\n                }\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type GetConversationQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type GetConversationQuery = { __typename?: \"Query\" } & {\n  getConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type ListConversationsQueryVariables = Exact<{\n  filter?: Maybe<ModelConversationFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type ListConversationsQuery = { __typename?: \"Query\" } & {\n  listConversations?: Maybe<\n    { __typename?: \"ModelConversationConnection\" } & Pick<\n      ModelConversationConnection,\n      \"nextToken\"\n    > & {\n        items?: Maybe<\n          Array<\n            Maybe<\n              { __typename?: \"Conversation\" } & Pick<\n                Conversation,\n                \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n              > & {\n                  messages?: Maybe<\n                    { __typename?: \"ModelMessageConnection\" } & Pick<\n                      ModelMessageConnection,\n                      \"nextToken\"\n                    > & {\n                        items?: Maybe<\n                          Array<\n                            Maybe<\n                              { __typename?: \"Message\" } & Pick<\n                                Message,\n                                | \"id\"\n                                | \"authorId\"\n                                | \"content\"\n                                | \"messageConversationId\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              > & {\n                                  author?: Maybe<\n                                    { __typename?: \"User\" } & Pick<\n                                      User,\n                                      | \"id\"\n                                      | \"username\"\n                                      | \"createdAt\"\n                                      | \"updatedAt\"\n                                    >\n                                  >;\n                                  conversation: {\n                                    __typename?: \"Conversation\";\n                                  } & Pick<\n                                    Conversation,\n                                    | \"id\"\n                                    | \"name\"\n                                    | \"members\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                }\n                            >\n                          >\n                        >;\n                      }\n                  >;\n                  associated?: Maybe<\n                    { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                      ModelConvoLinkConnection,\n                      \"nextToken\"\n                    > & {\n                        items?: Maybe<\n                          Array<\n                            Maybe<\n                              { __typename?: \"ConvoLink\" } & Pick<\n                                ConvoLink,\n                                | \"id\"\n                                | \"convoLinkUserId\"\n                                | \"convoLinkConversationId\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              > & {\n                                  user: { __typename?: \"User\" } & Pick<\n                                    User,\n                                    | \"id\"\n                                    | \"username\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                  conversation: {\n                                    __typename?: \"Conversation\";\n                                  } & Pick<\n                                    Conversation,\n                                    | \"id\"\n                                    | \"name\"\n                                    | \"members\"\n                                    | \"createdAt\"\n                                    | \"updatedAt\"\n                                  >;\n                                }\n                            >\n                          >\n                        >;\n                      }\n                  >;\n                }\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type GetEc2ConfigQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type GetEc2ConfigQuery = { __typename?: \"Query\" } & {\n  getEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type ListEc2ConfigsQueryVariables = Exact<{\n  filter?: Maybe<ModelEc2ConfigFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type ListEc2ConfigsQuery = { __typename?: \"Query\" } & {\n  listEc2Configs?: Maybe<\n    { __typename?: \"ModelEc2ConfigConnection\" } & Pick<\n      ModelEc2ConfigConnection,\n      \"nextToken\"\n    > & {\n        items?: Maybe<\n          Array<\n            Maybe<\n              { __typename?: \"Ec2Config\" } & Pick<\n                Ec2Config,\n                | \"id\"\n                | \"startDate\"\n                | \"stopDate\"\n                | \"username\"\n                | \"createdAt\"\n                | \"updatedAt\"\n                | \"owner\"\n              > & {\n                  history?: Maybe<\n                    { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n                      ModelHistoryEntryConnection,\n                      \"nextToken\"\n                    > & {\n                        items?: Maybe<\n                          Array<\n                            Maybe<\n                              { __typename?: \"HistoryEntry\" } & Pick<\n                                HistoryEntry,\n                                | \"id\"\n                                | \"ec2ConfigId\"\n                                | \"comment\"\n                                | \"time\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >\n                            >\n                          >\n                        >;\n                      }\n                  >;\n                }\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type GetPostQueryVariables = Exact<{\n  id: Scalars[\"ID\"];\n}>;\n\nexport type GetPostQuery = { __typename?: \"Query\" } & {\n  getPost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type ListPostsQueryVariables = Exact<{\n  filter?: Maybe<ModelPostFilterInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  nextToken?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type ListPostsQuery = { __typename?: \"Query\" } & {\n  listPosts?: Maybe<\n    { __typename?: \"ModelPostConnection\" } & Pick<\n      ModelPostConnection,\n      \"nextToken\"\n    > & {\n        items?: Maybe<\n          Array<\n            Maybe<\n              { __typename?: \"Post\" } & Pick<\n                Post,\n                | \"id\"\n                | \"title\"\n                | \"content\"\n                | \"username\"\n                | \"createdAt\"\n                | \"updatedAt\"\n                | \"owner\"\n              >\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type GetTodoQueryVariables = Exact<{\n  params: QueryGetTodoParamsInput;\n}>;\n\nexport type GetTodoQuery = { __typename?: \"Query\" } & {\n  getTodo?: Maybe<\n    { __typename?: \"Todo\" } & Pick<\n      Todo,\n      \"id\" | \"userId\" | \"title\" | \"completed\"\n    >\n  >;\n};\n\nexport type OnCreateConvoLinkSubscriptionVariables = Exact<{\n  convoLinkUserId: Scalars[\"ID\"];\n}>;\n\nexport type OnCreateConvoLinkSubscription = { __typename?: \"Subscription\" } & {\n  onCreateConvoLink?: Maybe<\n    { __typename?: \"ConvoLink\" } & Pick<\n      ConvoLink,\n      | \"id\"\n      | \"convoLinkUserId\"\n      | \"convoLinkConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        user: { __typename?: \"User\" } & Pick<\n          User,\n          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            conversations?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type OnCreateMessageSubscriptionVariables = Exact<{\n  messageConversationId: Scalars[\"ID\"];\n}>;\n\nexport type OnCreateMessageSubscription = { __typename?: \"Subscription\" } & {\n  onCreateMessage?: Maybe<\n    { __typename?: \"Message\" } & Pick<\n      Message,\n      | \"id\"\n      | \"authorId\"\n      | \"content\"\n      | \"messageConversationId\"\n      | \"createdAt\"\n      | \"updatedAt\"\n    > & {\n        author?: Maybe<\n          { __typename?: \"User\" } & Pick<\n            User,\n            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n          > & {\n              conversations?: Maybe<\n                { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                  ModelConvoLinkConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"ConvoLink\" } & Pick<\n                            ConvoLink,\n                            | \"id\"\n                            | \"convoLinkUserId\"\n                            | \"convoLinkConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              user: { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n              messages?: Maybe<\n                { __typename?: \"ModelMessageConnection\" } & Pick<\n                  ModelMessageConnection,\n                  \"nextToken\"\n                > & {\n                    items?: Maybe<\n                      Array<\n                        Maybe<\n                          { __typename?: \"Message\" } & Pick<\n                            Message,\n                            | \"id\"\n                            | \"authorId\"\n                            | \"content\"\n                            | \"messageConversationId\"\n                            | \"createdAt\"\n                            | \"updatedAt\"\n                          > & {\n                              author?: Maybe<\n                                { __typename?: \"User\" } & Pick<\n                                  User,\n                                  \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                                >\n                              >;\n                              conversation: {\n                                __typename?: \"Conversation\";\n                              } & Pick<\n                                Conversation,\n                                | \"id\"\n                                | \"name\"\n                                | \"members\"\n                                | \"createdAt\"\n                                | \"updatedAt\"\n                              >;\n                            }\n                        >\n                      >\n                    >;\n                  }\n              >;\n            }\n        >;\n        conversation: { __typename?: \"Conversation\" } & Pick<\n          Conversation,\n          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n        > & {\n            messages?: Maybe<\n              { __typename?: \"ModelMessageConnection\" } & Pick<\n                ModelMessageConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"Message\" } & Pick<\n                          Message,\n                          | \"id\"\n                          | \"authorId\"\n                          | \"content\"\n                          | \"messageConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            author?: Maybe<\n                              { __typename?: \"User\" } & Pick<\n                                User,\n                                \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                              >\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n            associated?: Maybe<\n              { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n                ModelConvoLinkConnection,\n                \"nextToken\"\n              > & {\n                  items?: Maybe<\n                    Array<\n                      Maybe<\n                        { __typename?: \"ConvoLink\" } & Pick<\n                          ConvoLink,\n                          | \"id\"\n                          | \"convoLinkUserId\"\n                          | \"convoLinkConversationId\"\n                          | \"createdAt\"\n                          | \"updatedAt\"\n                        > & {\n                            user: { __typename?: \"User\" } & Pick<\n                              User,\n                              \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                            >;\n                            conversation: {\n                              __typename?: \"Conversation\";\n                            } & Pick<\n                              Conversation,\n                              | \"id\"\n                              | \"name\"\n                              | \"members\"\n                              | \"createdAt\"\n                              | \"updatedAt\"\n                            >;\n                          }\n                      >\n                    >\n                  >;\n                }\n            >;\n          };\n      }\n  >;\n};\n\nexport type OnCreateHistoryEntrySubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type OnCreateHistoryEntrySubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onCreateHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type OnUpdateHistoryEntrySubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type OnUpdateHistoryEntrySubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onUpdateHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type OnDeleteHistoryEntrySubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type OnDeleteHistoryEntrySubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onDeleteHistoryEntry?: Maybe<\n    { __typename?: \"HistoryEntry\" } & Pick<\n      HistoryEntry,\n      \"id\" | \"ec2ConfigId\" | \"comment\" | \"time\" | \"createdAt\" | \"updatedAt\"\n    >\n  >;\n};\n\nexport type OnCreateUserSubscriptionVariables = Exact<{ [key: string]: never }>;\n\nexport type OnCreateUserSubscription = { __typename?: \"Subscription\" } & {\n  onCreateUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnUpdateUserSubscriptionVariables = Exact<{ [key: string]: never }>;\n\nexport type OnUpdateUserSubscription = { __typename?: \"Subscription\" } & {\n  onUpdateUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnDeleteUserSubscriptionVariables = Exact<{ [key: string]: never }>;\n\nexport type OnDeleteUserSubscription = { __typename?: \"Subscription\" } & {\n  onDeleteUser?: Maybe<\n    { __typename?: \"User\" } & Pick<\n      User,\n      \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        conversations?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnCreateConversationSubscriptionVariables = Exact<{\n  members: Scalars[\"String\"];\n}>;\n\nexport type OnCreateConversationSubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onCreateConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnUpdateConversationSubscriptionVariables = Exact<{\n  members: Scalars[\"String\"];\n}>;\n\nexport type OnUpdateConversationSubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onUpdateConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnDeleteConversationSubscriptionVariables = Exact<{\n  members: Scalars[\"String\"];\n}>;\n\nexport type OnDeleteConversationSubscription = {\n  __typename?: \"Subscription\";\n} & {\n  onDeleteConversation?: Maybe<\n    { __typename?: \"Conversation\" } & Pick<\n      Conversation,\n      \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n    > & {\n        messages?: Maybe<\n          { __typename?: \"ModelMessageConnection\" } & Pick<\n            ModelMessageConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"Message\" } & Pick<\n                      Message,\n                      | \"id\"\n                      | \"authorId\"\n                      | \"content\"\n                      | \"messageConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        author?: Maybe<\n                          { __typename?: \"User\" } & Pick<\n                            User,\n                            \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                          > & {\n                              conversations?: Maybe<\n                                {\n                                  __typename?: \"ModelConvoLinkConnection\";\n                                } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                              >;\n                              messages?: Maybe<\n                                {\n                                  __typename?: \"ModelMessageConnection\";\n                                } & Pick<ModelMessageConnection, \"nextToken\">\n                              >;\n                            }\n                        >;\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n        associated?: Maybe<\n          { __typename?: \"ModelConvoLinkConnection\" } & Pick<\n            ModelConvoLinkConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"ConvoLink\" } & Pick<\n                      ConvoLink,\n                      | \"id\"\n                      | \"convoLinkUserId\"\n                      | \"convoLinkConversationId\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    > & {\n                        user: { __typename?: \"User\" } & Pick<\n                          User,\n                          \"id\" | \"username\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            conversations?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                          };\n                        conversation: { __typename?: \"Conversation\" } & Pick<\n                          Conversation,\n                          \"id\" | \"name\" | \"members\" | \"createdAt\" | \"updatedAt\"\n                        > & {\n                            messages?: Maybe<\n                              { __typename?: \"ModelMessageConnection\" } & Pick<\n                                ModelMessageConnection,\n                                \"nextToken\"\n                              >\n                            >;\n                            associated?: Maybe<\n                              {\n                                __typename?: \"ModelConvoLinkConnection\";\n                              } & Pick<ModelConvoLinkConnection, \"nextToken\">\n                            >;\n                          };\n                      }\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnCreateEc2ConfigSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnCreateEc2ConfigSubscription = { __typename?: \"Subscription\" } & {\n  onCreateEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnUpdateEc2ConfigSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnUpdateEc2ConfigSubscription = { __typename?: \"Subscription\" } & {\n  onUpdateEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnDeleteEc2ConfigSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnDeleteEc2ConfigSubscription = { __typename?: \"Subscription\" } & {\n  onDeleteEc2Config?: Maybe<\n    { __typename?: \"Ec2Config\" } & Pick<\n      Ec2Config,\n      | \"id\"\n      | \"startDate\"\n      | \"stopDate\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    > & {\n        history?: Maybe<\n          { __typename?: \"ModelHistoryEntryConnection\" } & Pick<\n            ModelHistoryEntryConnection,\n            \"nextToken\"\n          > & {\n              items?: Maybe<\n                Array<\n                  Maybe<\n                    { __typename?: \"HistoryEntry\" } & Pick<\n                      HistoryEntry,\n                      | \"id\"\n                      | \"ec2ConfigId\"\n                      | \"comment\"\n                      | \"time\"\n                      | \"createdAt\"\n                      | \"updatedAt\"\n                    >\n                  >\n                >\n              >;\n            }\n        >;\n      }\n  >;\n};\n\nexport type OnCreatePostSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnCreatePostSubscription = { __typename?: \"Subscription\" } & {\n  onCreatePost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type OnUpdatePostSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnUpdatePostSubscription = { __typename?: \"Subscription\" } & {\n  onUpdatePost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport type OnDeletePostSubscriptionVariables = Exact<{\n  owner?: Maybe<Scalars[\"String\"]>;\n}>;\n\nexport type OnDeletePostSubscription = { __typename?: \"Subscription\" } & {\n  onDeletePost?: Maybe<\n    { __typename?: \"Post\" } & Pick<\n      Post,\n      | \"id\"\n      | \"title\"\n      | \"content\"\n      | \"username\"\n      | \"createdAt\"\n      | \"updatedAt\"\n      | \"owner\"\n    >\n  >;\n};\n\nexport const CreateHistoryEntryDocument = `\n    mutation CreateHistoryEntry($input: CreateHistoryEntryInput!) {\n  createHistoryEntry(input: $input) {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useCreateHistoryEntryMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    CreateHistoryEntryMutation,\n    TError,\n    CreateHistoryEntryMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateHistoryEntryMutation,\n    TError,\n    CreateHistoryEntryMutationVariables,\n    TContext\n  >(\n    (variables?: CreateHistoryEntryMutationVariables) =>\n      amplifyFetcher<\n        CreateHistoryEntryMutation,\n        CreateHistoryEntryMutationVariables\n      >(CreateHistoryEntryDocument, variables)(),\n    options\n  );\nexport const UpdateHistoryEntryDocument = `\n    mutation UpdateHistoryEntry($input: UpdateHistoryEntryInput!) {\n  updateHistoryEntry(input: $input) {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useUpdateHistoryEntryMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    UpdateHistoryEntryMutation,\n    TError,\n    UpdateHistoryEntryMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateHistoryEntryMutation,\n    TError,\n    UpdateHistoryEntryMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateHistoryEntryMutationVariables) =>\n      amplifyFetcher<\n        UpdateHistoryEntryMutation,\n        UpdateHistoryEntryMutationVariables\n      >(UpdateHistoryEntryDocument, variables)(),\n    options\n  );\nexport const DeleteHistoryEntryDocument = `\n    mutation DeleteHistoryEntry($input: DeleteHistoryEntryInput!) {\n  deleteHistoryEntry(input: $input) {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useDeleteHistoryEntryMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    DeleteHistoryEntryMutation,\n    TError,\n    DeleteHistoryEntryMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeleteHistoryEntryMutation,\n    TError,\n    DeleteHistoryEntryMutationVariables,\n    TContext\n  >(\n    (variables?: DeleteHistoryEntryMutationVariables) =>\n      amplifyFetcher<\n        DeleteHistoryEntryMutation,\n        DeleteHistoryEntryMutationVariables\n      >(DeleteHistoryEntryDocument, variables)(),\n    options\n  );\nexport const CreateUserDocument = `\n    mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useCreateUserMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    CreateUserMutation,\n    TError,\n    CreateUserMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateUserMutation,\n    TError,\n    CreateUserMutationVariables,\n    TContext\n  >(\n    (variables?: CreateUserMutationVariables) =>\n      amplifyFetcher<CreateUserMutation, CreateUserMutationVariables>(\n        CreateUserDocument,\n        variables\n      )(),\n    options\n  );\nexport const UpdateUserDocument = `\n    mutation UpdateUser($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useUpdateUserMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    UpdateUserMutation,\n    TError,\n    UpdateUserMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateUserMutation,\n    TError,\n    UpdateUserMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateUserMutationVariables) =>\n      amplifyFetcher<UpdateUserMutation, UpdateUserMutationVariables>(\n        UpdateUserDocument,\n        variables\n      )(),\n    options\n  );\nexport const DeleteUserDocument = `\n    mutation DeleteUser($input: DeleteUserInput!) {\n  deleteUser(input: $input) {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useDeleteUserMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    DeleteUserMutation,\n    TError,\n    DeleteUserMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeleteUserMutation,\n    TError,\n    DeleteUserMutationVariables,\n    TContext\n  >(\n    (variables?: DeleteUserMutationVariables) =>\n      amplifyFetcher<DeleteUserMutation, DeleteUserMutationVariables>(\n        DeleteUserDocument,\n        variables\n      )(),\n    options\n  );\nexport const CreateConversationDocument = `\n    mutation CreateConversation($input: CreateConversationInput!) {\n  createConversation(input: $input) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useCreateConversationMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    CreateConversationMutation,\n    TError,\n    CreateConversationMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateConversationMutation,\n    TError,\n    CreateConversationMutationVariables,\n    TContext\n  >(\n    (variables?: CreateConversationMutationVariables) =>\n      amplifyFetcher<\n        CreateConversationMutation,\n        CreateConversationMutationVariables\n      >(CreateConversationDocument, variables)(),\n    options\n  );\nexport const UpdateConversationDocument = `\n    mutation UpdateConversation($input: UpdateConversationInput!) {\n  updateConversation(input: $input) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useUpdateConversationMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    UpdateConversationMutation,\n    TError,\n    UpdateConversationMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateConversationMutation,\n    TError,\n    UpdateConversationMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateConversationMutationVariables) =>\n      amplifyFetcher<\n        UpdateConversationMutation,\n        UpdateConversationMutationVariables\n      >(UpdateConversationDocument, variables)(),\n    options\n  );\nexport const DeleteConversationDocument = `\n    mutation DeleteConversation($input: DeleteConversationInput!) {\n  deleteConversation(input: $input) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useDeleteConversationMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    DeleteConversationMutation,\n    TError,\n    DeleteConversationMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeleteConversationMutation,\n    TError,\n    DeleteConversationMutationVariables,\n    TContext\n  >(\n    (variables?: DeleteConversationMutationVariables) =>\n      amplifyFetcher<\n        DeleteConversationMutation,\n        DeleteConversationMutationVariables\n      >(DeleteConversationDocument, variables)(),\n    options\n  );\nexport const CreateMessageDocument = `\n    mutation CreateMessage($input: CreateMessageInput!) {\n  createMessage(input: $input) {\n    id\n    author {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    authorId\n    content\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    messageConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useCreateMessageMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    CreateMessageMutation,\n    TError,\n    CreateMessageMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateMessageMutation,\n    TError,\n    CreateMessageMutationVariables,\n    TContext\n  >(\n    (variables?: CreateMessageMutationVariables) =>\n      amplifyFetcher<CreateMessageMutation, CreateMessageMutationVariables>(\n        CreateMessageDocument,\n        variables\n      )(),\n    options\n  );\nexport const UpdateMessageDocument = `\n    mutation UpdateMessage($input: UpdateMessageInput!) {\n  updateMessage(input: $input) {\n    id\n    author {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    authorId\n    content\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    messageConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useUpdateMessageMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    UpdateMessageMutation,\n    TError,\n    UpdateMessageMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateMessageMutation,\n    TError,\n    UpdateMessageMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateMessageMutationVariables) =>\n      amplifyFetcher<UpdateMessageMutation, UpdateMessageMutationVariables>(\n        UpdateMessageDocument,\n        variables\n      )(),\n    options\n  );\nexport const DeleteMessageDocument = `\n    mutation DeleteMessage($input: DeleteMessageInput!) {\n  deleteMessage(input: $input) {\n    id\n    author {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    authorId\n    content\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    messageConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useDeleteMessageMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    DeleteMessageMutation,\n    TError,\n    DeleteMessageMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeleteMessageMutation,\n    TError,\n    DeleteMessageMutationVariables,\n    TContext\n  >(\n    (variables?: DeleteMessageMutationVariables) =>\n      amplifyFetcher<DeleteMessageMutation, DeleteMessageMutationVariables>(\n        DeleteMessageDocument,\n        variables\n      )(),\n    options\n  );\nexport const CreateConvoLinkDocument = `\n    mutation CreateConvoLink($input: CreateConvoLinkInput!) {\n  createConvoLink(input: $input) {\n    id\n    user {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    convoLinkUserId\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    convoLinkConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useCreateConvoLinkMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    CreateConvoLinkMutation,\n    TError,\n    CreateConvoLinkMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateConvoLinkMutation,\n    TError,\n    CreateConvoLinkMutationVariables,\n    TContext\n  >(\n    (variables?: CreateConvoLinkMutationVariables) =>\n      amplifyFetcher<CreateConvoLinkMutation, CreateConvoLinkMutationVariables>(\n        CreateConvoLinkDocument,\n        variables\n      )(),\n    options\n  );\nexport const UpdateConvoLinkDocument = `\n    mutation UpdateConvoLink($input: UpdateConvoLinkInput!) {\n  updateConvoLink(input: $input) {\n    id\n    user {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    convoLinkUserId\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    convoLinkConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useUpdateConvoLinkMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    UpdateConvoLinkMutation,\n    TError,\n    UpdateConvoLinkMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateConvoLinkMutation,\n    TError,\n    UpdateConvoLinkMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateConvoLinkMutationVariables) =>\n      amplifyFetcher<UpdateConvoLinkMutation, UpdateConvoLinkMutationVariables>(\n        UpdateConvoLinkDocument,\n        variables\n      )(),\n    options\n  );\nexport const CreateEc2ConfigDocument = `\n    mutation CreateEc2Config($input: CreateEc2ConfigInput!) {\n  createEc2Config(input: $input) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useCreateEc2ConfigMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    CreateEc2ConfigMutation,\n    TError,\n    CreateEc2ConfigMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreateEc2ConfigMutation,\n    TError,\n    CreateEc2ConfigMutationVariables,\n    TContext\n  >(\n    (variables?: CreateEc2ConfigMutationVariables) =>\n      amplifyFetcher<CreateEc2ConfigMutation, CreateEc2ConfigMutationVariables>(\n        CreateEc2ConfigDocument,\n        variables\n      )(),\n    options\n  );\nexport const UpdateEc2ConfigDocument = `\n    mutation UpdateEc2Config($input: UpdateEc2ConfigInput!) {\n  updateEc2Config(input: $input) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useUpdateEc2ConfigMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    UpdateEc2ConfigMutation,\n    TError,\n    UpdateEc2ConfigMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdateEc2ConfigMutation,\n    TError,\n    UpdateEc2ConfigMutationVariables,\n    TContext\n  >(\n    (variables?: UpdateEc2ConfigMutationVariables) =>\n      amplifyFetcher<UpdateEc2ConfigMutation, UpdateEc2ConfigMutationVariables>(\n        UpdateEc2ConfigDocument,\n        variables\n      )(),\n    options\n  );\nexport const DeleteEc2ConfigDocument = `\n    mutation DeleteEc2Config($input: DeleteEc2ConfigInput!) {\n  deleteEc2Config(input: $input) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useDeleteEc2ConfigMutation = <\n  TError = unknown,\n  TContext = unknown\n>(\n  options?: UseMutationOptions<\n    DeleteEc2ConfigMutation,\n    TError,\n    DeleteEc2ConfigMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeleteEc2ConfigMutation,\n    TError,\n    DeleteEc2ConfigMutationVariables,\n    TContext\n  >(\n    (variables?: DeleteEc2ConfigMutationVariables) =>\n      amplifyFetcher<DeleteEc2ConfigMutation, DeleteEc2ConfigMutationVariables>(\n        DeleteEc2ConfigDocument,\n        variables\n      )(),\n    options\n  );\nexport const CreatePostDocument = `\n    mutation CreatePost($input: CreatePostInput!) {\n  createPost(input: $input) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useCreatePostMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    CreatePostMutation,\n    TError,\n    CreatePostMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    CreatePostMutation,\n    TError,\n    CreatePostMutationVariables,\n    TContext\n  >(\n    (variables?: CreatePostMutationVariables) =>\n      amplifyFetcher<CreatePostMutation, CreatePostMutationVariables>(\n        CreatePostDocument,\n        variables\n      )(),\n    options\n  );\nexport const UpdatePostDocument = `\n    mutation UpdatePost($input: UpdatePostInput!) {\n  updatePost(input: $input) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useUpdatePostMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    UpdatePostMutation,\n    TError,\n    UpdatePostMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    UpdatePostMutation,\n    TError,\n    UpdatePostMutationVariables,\n    TContext\n  >(\n    (variables?: UpdatePostMutationVariables) =>\n      amplifyFetcher<UpdatePostMutation, UpdatePostMutationVariables>(\n        UpdatePostDocument,\n        variables\n      )(),\n    options\n  );\nexport const DeletePostDocument = `\n    mutation DeletePost($input: DeletePostInput!) {\n  deletePost(input: $input) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useDeletePostMutation = <TError = unknown, TContext = unknown>(\n  options?: UseMutationOptions<\n    DeletePostMutation,\n    TError,\n    DeletePostMutationVariables,\n    TContext\n  >\n) =>\n  useMutation<\n    DeletePostMutation,\n    TError,\n    DeletePostMutationVariables,\n    TContext\n  >(\n    (variables?: DeletePostMutationVariables) =>\n      amplifyFetcher<DeletePostMutation, DeletePostMutationVariables>(\n        DeletePostDocument,\n        variables\n      )(),\n    options\n  );\nexport const ListTodosDocument = `\n    query ListTodos {\n  listTodos {\n    id\n    userId\n    title\n    completed\n  }\n}\n    `;\nexport const useListTodosQuery = <TData = ListTodosQuery, TError = unknown>(\n  variables?: ListTodosQueryVariables,\n  options?: UseQueryOptions<ListTodosQuery, TError, TData>\n) =>\n  useQuery<ListTodosQuery, TError, TData>(\n    [\"ListTodos\", variables],\n    amplifyFetcher<ListTodosQuery, ListTodosQueryVariables>(\n      ListTodosDocument,\n      variables\n    ),\n    options\n  );\nexport const GetHistoryEntryDocument = `\n    query GetHistoryEntry($id: ID!) {\n  getHistoryEntry(id: $id) {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useGetHistoryEntryQuery = <\n  TData = GetHistoryEntryQuery,\n  TError = unknown\n>(\n  variables: GetHistoryEntryQueryVariables,\n  options?: UseQueryOptions<GetHistoryEntryQuery, TError, TData>\n) =>\n  useQuery<GetHistoryEntryQuery, TError, TData>(\n    [\"GetHistoryEntry\", variables],\n    amplifyFetcher<GetHistoryEntryQuery, GetHistoryEntryQueryVariables>(\n      GetHistoryEntryDocument,\n      variables\n    ),\n    options\n  );\nexport const ListHistoryEntrysDocument = `\n    query ListHistoryEntrys($filter: ModelHistoryEntryFilterInput, $limit: Int, $nextToken: String) {\n  listHistoryEntrys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      ec2ConfigId\n      comment\n      time\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n    `;\nexport const useListHistoryEntrysQuery = <\n  TData = ListHistoryEntrysQuery,\n  TError = unknown\n>(\n  variables?: ListHistoryEntrysQueryVariables,\n  options?: UseQueryOptions<ListHistoryEntrysQuery, TError, TData>\n) =>\n  useQuery<ListHistoryEntrysQuery, TError, TData>(\n    [\"ListHistoryEntrys\", variables],\n    amplifyFetcher<ListHistoryEntrysQuery, ListHistoryEntrysQueryVariables>(\n      ListHistoryEntrysDocument,\n      variables\n    ),\n    options\n  );\nexport const GetUserDocument = `\n    query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useGetUserQuery = <TData = GetUserQuery, TError = unknown>(\n  variables: GetUserQueryVariables,\n  options?: UseQueryOptions<GetUserQuery, TError, TData>\n) =>\n  useQuery<GetUserQuery, TError, TData>(\n    [\"GetUser\", variables],\n    amplifyFetcher<GetUserQuery, GetUserQueryVariables>(\n      GetUserDocument,\n      variables\n    ),\n    options\n  );\nexport const ListUsersDocument = `\n    query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {\n  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n    `;\nexport const useListUsersQuery = <TData = ListUsersQuery, TError = unknown>(\n  variables?: ListUsersQueryVariables,\n  options?: UseQueryOptions<ListUsersQuery, TError, TData>\n) =>\n  useQuery<ListUsersQuery, TError, TData>(\n    [\"ListUsers\", variables],\n    amplifyFetcher<ListUsersQuery, ListUsersQueryVariables>(\n      ListUsersDocument,\n      variables\n    ),\n    options\n  );\nexport const GetConversationDocument = `\n    query GetConversation($id: ID!) {\n  getConversation(id: $id) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const useGetConversationQuery = <\n  TData = GetConversationQuery,\n  TError = unknown\n>(\n  variables: GetConversationQueryVariables,\n  options?: UseQueryOptions<GetConversationQuery, TError, TData>\n) =>\n  useQuery<GetConversationQuery, TError, TData>(\n    [\"GetConversation\", variables],\n    amplifyFetcher<GetConversationQuery, GetConversationQueryVariables>(\n      GetConversationDocument,\n      variables\n    ),\n    options\n  );\nexport const ListConversationsDocument = `\n    query ListConversations($filter: ModelConversationFilterInput, $limit: Int, $nextToken: String) {\n  listConversations(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n    `;\nexport const useListConversationsQuery = <\n  TData = ListConversationsQuery,\n  TError = unknown\n>(\n  variables?: ListConversationsQueryVariables,\n  options?: UseQueryOptions<ListConversationsQuery, TError, TData>\n) =>\n  useQuery<ListConversationsQuery, TError, TData>(\n    [\"ListConversations\", variables],\n    amplifyFetcher<ListConversationsQuery, ListConversationsQueryVariables>(\n      ListConversationsDocument,\n      variables\n    ),\n    options\n  );\nexport const GetEc2ConfigDocument = `\n    query GetEc2Config($id: ID!) {\n  getEc2Config(id: $id) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useGetEc2ConfigQuery = <\n  TData = GetEc2ConfigQuery,\n  TError = unknown\n>(\n  variables: GetEc2ConfigQueryVariables,\n  options?: UseQueryOptions<GetEc2ConfigQuery, TError, TData>\n) =>\n  useQuery<GetEc2ConfigQuery, TError, TData>(\n    [\"GetEc2Config\", variables],\n    amplifyFetcher<GetEc2ConfigQuery, GetEc2ConfigQueryVariables>(\n      GetEc2ConfigDocument,\n      variables\n    ),\n    options\n  );\nexport const ListEc2ConfigsDocument = `\n    query ListEc2Configs($filter: ModelEc2ConfigFilterInput, $limit: Int, $nextToken: String) {\n  listEc2Configs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      startDate\n      stopDate\n      username\n      history {\n        items {\n          id\n          ec2ConfigId\n          comment\n          time\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n    nextToken\n  }\n}\n    `;\nexport const useListEc2ConfigsQuery = <\n  TData = ListEc2ConfigsQuery,\n  TError = unknown\n>(\n  variables?: ListEc2ConfigsQueryVariables,\n  options?: UseQueryOptions<ListEc2ConfigsQuery, TError, TData>\n) =>\n  useQuery<ListEc2ConfigsQuery, TError, TData>(\n    [\"ListEc2Configs\", variables],\n    amplifyFetcher<ListEc2ConfigsQuery, ListEc2ConfigsQueryVariables>(\n      ListEc2ConfigsDocument,\n      variables\n    ),\n    options\n  );\nexport const GetPostDocument = `\n    query GetPost($id: ID!) {\n  getPost(id: $id) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const useGetPostQuery = <TData = GetPostQuery, TError = unknown>(\n  variables: GetPostQueryVariables,\n  options?: UseQueryOptions<GetPostQuery, TError, TData>\n) =>\n  useQuery<GetPostQuery, TError, TData>(\n    [\"GetPost\", variables],\n    amplifyFetcher<GetPostQuery, GetPostQueryVariables>(\n      GetPostDocument,\n      variables\n    ),\n    options\n  );\nexport const ListPostsDocument = `\n    query ListPosts($filter: ModelPostFilterInput, $limit: Int, $nextToken: String) {\n  listPosts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      title\n      content\n      username\n      createdAt\n      updatedAt\n      owner\n    }\n    nextToken\n  }\n}\n    `;\nexport const useListPostsQuery = <TData = ListPostsQuery, TError = unknown>(\n  variables?: ListPostsQueryVariables,\n  options?: UseQueryOptions<ListPostsQuery, TError, TData>\n) =>\n  useQuery<ListPostsQuery, TError, TData>(\n    [\"ListPosts\", variables],\n    amplifyFetcher<ListPostsQuery, ListPostsQueryVariables>(\n      ListPostsDocument,\n      variables\n    ),\n    options\n  );\nexport const GetTodoDocument = `\n    query GetTodo($params: QueryGetTodoParamsInput!) {\n  getTodo(params: $params) {\n    id\n    userId\n    title\n    completed\n  }\n}\n    `;\nexport const useGetTodoQuery = <TData = GetTodoQuery, TError = unknown>(\n  variables: GetTodoQueryVariables,\n  options?: UseQueryOptions<GetTodoQuery, TError, TData>\n) =>\n  useQuery<GetTodoQuery, TError, TData>(\n    [\"GetTodo\", variables],\n    amplifyFetcher<GetTodoQuery, GetTodoQueryVariables>(\n      GetTodoDocument,\n      variables\n    ),\n    options\n  );\nexport const OnCreateConvoLinkDocument = `\n    subscription OnCreateConvoLink($convoLinkUserId: ID!) {\n  onCreateConvoLink(convoLinkUserId: $convoLinkUserId) {\n    id\n    user {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    convoLinkUserId\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    convoLinkConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnCreateMessageDocument = `\n    subscription OnCreateMessage($messageConversationId: ID!) {\n  onCreateMessage(messageConversationId: $messageConversationId) {\n    id\n    author {\n      id\n      username\n      conversations {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n    authorId\n    content\n    conversation {\n      id\n      messages {\n        items {\n          id\n          author {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          authorId\n          content\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          messageConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      associated {\n        items {\n          id\n          user {\n            id\n            username\n            createdAt\n            updatedAt\n          }\n          convoLinkUserId\n          conversation {\n            id\n            name\n            members\n            createdAt\n            updatedAt\n          }\n          convoLinkConversationId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      name\n      members\n      createdAt\n      updatedAt\n    }\n    messageConversationId\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnCreateHistoryEntryDocument = `\n    subscription OnCreateHistoryEntry {\n  onCreateHistoryEntry {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnUpdateHistoryEntryDocument = `\n    subscription OnUpdateHistoryEntry {\n  onUpdateHistoryEntry {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnDeleteHistoryEntryDocument = `\n    subscription OnDeleteHistoryEntry {\n  onDeleteHistoryEntry {\n    id\n    ec2ConfigId\n    comment\n    time\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnCreateUserDocument = `\n    subscription OnCreateUser {\n  onCreateUser {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnUpdateUserDocument = `\n    subscription OnUpdateUser {\n  onUpdateUser {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnDeleteUserDocument = `\n    subscription OnDeleteUser {\n  onDeleteUser {\n    id\n    username\n    conversations {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnCreateConversationDocument = `\n    subscription OnCreateConversation($members: String!) {\n  onCreateConversation(members: $members) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnUpdateConversationDocument = `\n    subscription OnUpdateConversation($members: String!) {\n  onUpdateConversation(members: $members) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnDeleteConversationDocument = `\n    subscription OnDeleteConversation($members: String!) {\n  onDeleteConversation(members: $members) {\n    id\n    messages {\n      items {\n        id\n        author {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        authorId\n        content\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        messageConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    associated {\n      items {\n        id\n        user {\n          id\n          username\n          conversations {\n            nextToken\n          }\n          messages {\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n        convoLinkUserId\n        conversation {\n          id\n          messages {\n            nextToken\n          }\n          associated {\n            nextToken\n          }\n          name\n          members\n          createdAt\n          updatedAt\n        }\n        convoLinkConversationId\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    name\n    members\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport const OnCreateEc2ConfigDocument = `\n    subscription OnCreateEc2Config($owner: String) {\n  onCreateEc2Config(owner: $owner) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const OnUpdateEc2ConfigDocument = `\n    subscription OnUpdateEc2Config($owner: String) {\n  onUpdateEc2Config(owner: $owner) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const OnDeleteEc2ConfigDocument = `\n    subscription OnDeleteEc2Config($owner: String) {\n  onDeleteEc2Config(owner: $owner) {\n    id\n    startDate\n    stopDate\n    username\n    history {\n      items {\n        id\n        ec2ConfigId\n        comment\n        time\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const OnCreatePostDocument = `\n    subscription OnCreatePost($owner: String) {\n  onCreatePost(owner: $owner) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const OnUpdatePostDocument = `\n    subscription OnUpdatePost($owner: String) {\n  onUpdatePost(owner: $owner) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\nexport const OnDeletePostDocument = `\n    subscription OnDeletePost($owner: String) {\n  onDeletePost(owner: $owner) {\n    id\n    title\n    content\n    username\n    createdAt\n    updatedAt\n    owner\n  }\n}\n    `;\n","import React, { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { Auth } from '@aws-amplify/auth';\n\nimport { useListPostsQuery } from '../lib/api';\nimport { CreatePostInput, CreatePostDocument, Post } from '../lib/api';\nimport { API } from '../lib/fetcher';\n\nconst initialState = { title: '', content: '' };\n\nexport function Posts() {\n  const [post, setPost] = useState(initialState);\n  const { title, content } = post;\n\n  const { data, isLoading, refetch } = useListPostsQuery(null, {\n    refetchOnWindowFocus: false\n  });\n\n  // useCreatePostMutation isn't working correctly right now\n  const [createPost] = useMutation(async (input: CreatePostInput) => {\n    const result = await API.getInstance().query(CreatePostDocument, { input });\n    return result.data?.createPost as Post;\n  });\n\n  const onChange = (e) => {\n    setPost(() => ({ ...post, [e.target.name]: e.target.value }))\n  }\n\n  const createNewPost = async () => {\n    if (!title || !content) return\n\n    const userData = await Auth.currentAuthenticatedUser();\n\n    const input = {\n      ...post,\n      username: userData.username\n    };\n\n    const createResult = await createPost(input, { onSuccess: (data) => { console.log(data) } });\n    if (createResult) {\n      refetch();\n    }\n  }\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div>\n        <h2>Posts:</h2>\n        {\n          data?.listPosts?.items\n            ? data?.listPosts?.items?.map(post => {\n              return (\n                <div>\n                  <h4>Title: {post.title}</h4>\n                  <h5>Owner: {post.owner}</h5>\n                  <h5>Content: {post.content}</h5>\n                </div>\n              )\n            })\n            : <h4>No posts found</h4>\n        }\n      </div>\n      <br />\n      <br />\n      <div>\n        <h3>Create Post:</h3>\n        <div>\n          <input onChange={onChange} name=\"title\" placeholder=\"Title\" />\n        </div>\n        <div>\n          <textarea onChange={onChange} name=\"content\" placeholder=\"Content\" />\n        </div>\n        <div>\n          <button onClick={createNewPost}>Create Post</button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\n\nimport { useListTodosQuery } from '../lib/api';\n\nexport function Todos() {\n  const { data, isLoading } = useListTodosQuery(null, {\n    refetchOnWindowFocus: false\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h2>Todos:</h2>\n        {\n          data?.listTodos.length > 0\n            ? data?.listTodos.map(todo => {\n              return (\n                <div>\n                  <h4>Title: {todo.title}</h4>\n                  <h5>Owner: {todo.userId}</h5>\n                </div>\n              )\n            })\n            : <h4>No todos found</h4>\n        }\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { Auth } from '@aws-amplify/auth';\n\nimport { DeleteEc2ConfigDocument, DeleteEc2ConfigInput, useListEc2ConfigsQuery } from '../lib/api';\nimport { CreateEc2ConfigInput, CreateEc2ConfigDocument, Ec2Config } from '../lib/api';\nimport { API } from '../lib/fetcher';\n\nimport ReactDatetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { Moment } from \"moment\";\nimport * as moment from \"moment\";\n\nconst initialState = { startDate: '', stopDate: ''};\n\nexport function Configs() {\n  const [config, setConfig] = useState(initialState);\n  const { startDate, stopDate} = config;\n\n  const { data, isLoading, refetch } = useListEc2ConfigsQuery(null, {\n    refetchOnWindowFocus: false\n  });\n\n  // useCreatePostMutation isn't working correctly right now\n  const [createEc2Config] = useMutation(async (input: CreateEc2ConfigInput) => {\n    const result = await API.getInstance().query(CreateEc2ConfigDocument, { input });\n    return result.data?.createEc2Config as Ec2Config;\n  });\n\n  const [deleteEc2Config] = useMutation(async (input: DeleteEc2ConfigInput) => {\n    const result = await API.getInstance().query(DeleteEc2ConfigDocument, { input });\n    console.log(result);\n    return result.data?.deleteEc2Config as Ec2Config;\n  });\n\n  const createNewEc2Config = async () => {\n    if (!startDate || !stopDate) return\n\n    console.log(config);\n\n    const userData = await Auth.currentAuthenticatedUser();\n\n    const input = {\n      ...config,\n      // startDate: startDate2.toISOString(),\n      username: userData.username\n    };\n\n    const createResult = await createEc2Config(input, { onSuccess: (data) => { console.log(data) } });\n    if (createResult) {\n      refetch();\n    }\n  }\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div>\n        <h2>Ec2 Configs:</h2>\n        {\n          data?.listEc2Configs?.items\n            ? data?.listEc2Configs?.items?.map(config => {\n              return (\n                <div>\n                  <h4>Start Date: {new Date(config.startDate).toLocaleString()}</h4>\n                  <h4>Stop Date: {new Date(config.stopDate).toLocaleString()}</h4>\n                  <h4>Owner: {config.owner}</h4>\n                  <button onClick={async () => {\n                    const deleteResult = await deleteEc2Config({id: config.id});\n                    if (deleteResult) {\n                      refetch();\n                    }\n                  }}>Delete</button>\n                </div>\n              )\n            })\n            : <h4>No ec2 configs found</h4>\n        }\n      </div>\n      <br />\n      <br />\n      <div>\n        <h3>Create Ec2 Config:</h3>\n        <div>\n          <ReactDatetime\n            onChange={ (date: string | Moment) => setConfig(() => ({ ...config, startDate: (date as Moment).toISOString() }))}\n            value={new Date(new Date().setHours(new Date().getHours() + 1))}\n          />\n        </div>\n        <div>\n          <ReactDatetime\n            onChange={ (date: string | Moment) => setConfig(() => ({ ...config, stopDate: (date as Moment).toISOString() }))}\n            value={new Date(new Date().setHours(new Date().getHours() + 1))}\n          />\n        </div>\n        <div> \n          <button onClick={createNewEc2Config}>Create Ec2 Config</button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport { css } from 'glamor'\nimport { observer } from 'mobx-react'\n// import { graphql, compose } from 'react-apollo'\nimport { FaComments, FaChevronRight } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\nimport { Auth } from '@aws-amplify/auth';\n\nimport { useListConversationsQuery } from '../lib/api';\n\n\n// import UserStore from '../mobx/UserStore'\nimport { primary, lightBg } from '../theme'\n// import { getUserAndConversations } from '../graphql/queries'\nimport { listUsers, getConvo } from '../graphql/queries'\n\nexport function Conversations() {\n      // const { username } = UserStore\n\n      // const userData = await Auth.currentAuthenticatedUser();\n\n      const { data, isLoading, refetch } = useListConversationsQuery(null, {\n        refetchOnWindowFocus: false\n      });\n\n      // data = data.getConvo.map((c) => {\n      //   const convo = c.conversation.name.split('&')\n      //   const name = convo.find(i => i !== userData.username)\n      //   return { ...c, name }\n      // })\n      return (\n        <div {...css(styles.container)}>\n          <p {...css(styles.title)}>Conversations:</p>\n          {\n            data?.listConversations?.items\n            ? data?.listConversations?.items?.map((item, i) => {\n              return (\n              <Link to={`conversation/${item.id}/${item.name}`} {...css(styles.link)} key={i}>\n                <div {...css(styles.conversation)}>\n                  <FaComments />\n                  <p {...css(styles.conversationTitle)}>{item.name}</p>\n                  <div {...css(styles.chevronContainer)}>\n                    <FaChevronRight />\n                  </div>\n                </div>\n              </Link>\n              )\n            }) : <h4>No conversations found</h4>\n          }\n        </div>\n      )\n    }\n\n// const ConversationsWithData = compose(\n//   graphql(getUserAndConversations, {\n//     options: () => {\n//       return {\n//         variables: {\n//           id:  UserStore.username\n//         },\n//         fetchPolicy: 'cache-and-network'\n//       }\n//     },\n//     props: props => {\n//       return {\n//         conversations: props.data.getUser ? props.data.getUser.conversations.items : []\n//       }\n//     }\n//   })\n// )(ConversationsObserver)\n\nconst styles = {\n  link: {\n    textDecoration: 'none',\n    color: 'black'\n  },\n  container: {\n    padding: 10\n  },\n  conversation: {\n    marginTop: 10,\n    backgroundColor: lightBg,\n    padding: '12px 15px',\n    borderRadius: 20,\n    display: 'flex'\n  },\n  conversationTitle: {\n    margin: 0,\n    marginLeft: 12\n  },\n  chevronContainer: {\n    flex: 1, display: 'flex', justifyContent: 'flex-end'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n    margin: 0,\n    borderBottom: `2px solid ${primary}`,\n    paddingBottom: 4\n  }\n}\n\n// export default observer(ConversationsWithData)","const primary = 'rgb(255, 235, 59)'\nconst lightBg = 'rgba(255, 235, 59, .2)'\n\nexport {\n  primary,\n  lightBg\n}","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\n\nimport { API } from './lib/fetcher';\n\nimport Amplify from 'aws-amplify';\n\nimport { Posts } from './components/posts';\nimport { Todos } from './components/todos';\nimport { Configs } from './components/configs';\nimport { Conversations } from './components/conversations';\n\ndeclare const window: any;\n\nAmplify.configure(window.ENV);\n\nfunction App() {\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData: any) => {\n      API.updateIsSignedIn(nextAuthState === AuthState.SignedIn);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"Navbar\">\n        <h1 className=\"navbar-logo\">Hacklab Demo</h1>\n        <ul className=\"nav-menu\">\n          <li> <a href=\"/configs\">Conversations</a></li>\n          <li> <a href=\"/configs\">Configs</a></li>\n          <li> <a href=\"/posts\">Posts</a></li>\n          <li> <a href=\"/todos\">Todos</a></li>\n        </ul>\n      </nav>\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" render={(props: any) => <Conversations {...props}  />} />\n            <Route path=\"/conversations\" render={(props: any) => <Conversations {...props}  />} />\n            <Route path=\"/configs\" render={(props: any) => <Configs {...props}  />} />\n            <Route path=\"/posts\" render={(props: any) => <Posts {...props}  />} />\n            <Route path=\"/todos\" render={(props: any) => <Todos {...props}  />} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}